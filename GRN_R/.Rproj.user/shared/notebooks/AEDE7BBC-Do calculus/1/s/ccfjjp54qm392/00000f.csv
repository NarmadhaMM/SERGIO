"0","mutilated_model <- function(mu1, mu2,mu3,"
"0","                            u1_scale, u2_scale, u3_scale,"
"0","                            theta_zero_X1, theta_U1X1, theta_U2X1,"
"0","                            theta_zero_X2,theta_U1X2,theta_U2X2,"
"0","                            theta_zero_X3,theta_U1X3,theta_U2X3,"
"0","                            theta_zero_X4,theta_U1X4,theta_U2X4,"
"0","                            theta_zero_X5,theta_U1X5,theta_U2X5,"
"0","                            theta_zero_M,theta_X1M,theta_X2M,theta_X3M,theta_X4M,theta_X5M,"
"0","                            theta_zero_Y, theta_MY,"
"0","                            theta_U1Y, theta_U2Y,theta_U3Y,"
"0","                            x1, x2, x3, x4, x5,"
"0","                            seed, num_generated_samples) {"
"0","    set.seed(seed)"
"0","    U1 = rnorm(num_generated_samples, mu1, u1_scale)"
"0","    U2 = rnorm(num_generated_samples, mu2, u2_scale)"
"0","    U3 = rnorm(num_generated_samples, mu3, u3_scale)"
"0","    X1 <- x1"
"0","    X2 <- x2"
"0","    X3 <- x3"
"0","    X4 <- x4"
"0","    X5 <- x5"
"0","    "
"0","    pm = rep(0, D)"
"0","    pm = 1/(1+exp(-theta_zero_M - theta_X1M * X1 - theta_X2M * X2 - theta_X3M * X3 - theta_X4M * X4 - theta_X5M * X5))"
"0","    M <- rbinom(n = D, size = 1, prob = pm)"
"0",""
"0","    py = rep(0, D)"
"0","    py = 1/(1+exp(-theta_zero_Y - theta_MY * M - theta_U1Y * U1 - theta_U2Y * U2 - theta_U3Y * U3))"
"0","    Y <- rbinom(n = D, size = 1, prob = py)"
"0","  return(Y)"
"0","}"

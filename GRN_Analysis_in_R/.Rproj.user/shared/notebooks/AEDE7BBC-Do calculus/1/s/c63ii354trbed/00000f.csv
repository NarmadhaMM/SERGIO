"0","estimated_y_hmc_list <- list()"
"0","hmc_fit_list <- list()"
"0","means_hmc <- c()"
"0","means_hmc_list <- list()"
"0","start_time <- Sys.time()"
"0","for (num_data_points in ndp) {"
"0","  print(""num_data_points is:"")"
"0","  print(num_data_points)"
"0","  for (data_count in 1:K) {"
"0","    print(""data_count is:"")"
"0","    print(data_count)"
"0","    data_list <- list(D=num_data_points,"
"0","                      X1 = obs_data_list[[data_count]]$X1[1:num_data_points],"
"0","                      X2 = obs_data_list[[data_count]]$X2[1:num_data_points],"
"0","                      X3 = obs_data_list[[data_count]]$X3[1:num_data_points],"
"0","                      X4 = obs_data_list[[data_count]]$X4[1:num_data_points],"
"0","                      X5 = obs_data_list[[data_count]]$X5[1:num_data_points],"
"0","                      M = obs_data_list[[data_count]]$M[1:num_data_points],"
"0","                      Y = obs_data_list[[data_count]]$Y[1:num_data_points])"
"0","    #If you get this error (Cluster setup failed. 2 of 2 workers failed to connect.) run these lines:"
"0","    # if (Sys.getenv(""RSTUDIO"") == ""1"" && !nzchar(Sys.getenv(""RSTUDIO_TERM"")) &&"
"0","    #     Sys.info()[""sysname""] == ""Darwin"") {"
"0","    #   parallel:::setDefaultClusterOptions(setup_strategy = ""sequential"")"
"0","    # }"
"0","    hmc_fit_list[[data_count]] <- rstan::sampling(mod, data=data_list, chains = 2, iter = 3000, warmup = 1500, seed = 1, control = list(max_treedepth = 15)) #seed 1 gives nice results"
"0","    samples_hmc <- rstan::extract(hmc_fit_list[[data_count]], c(""mu1"",""mu2"", ""mu3"", ""u1_scale"",""u2_scale"",""u3_scale"","
"0","                                                                ""theta_zero_X1"", ""theta_U1X1"", ""theta_U2X1"","
"0","                                                                ""theta_zero_X2"", ""theta_U1X2"", ""theta_U2X2"","
"0","                                                                ""theta_zero_X3"", ""theta_U1X3"", ""theta_U2X3"","
"0","                                                                ""theta_zero_X4"", ""theta_U1X4"", ""theta_U2X4"","
"0","                                                                ""theta_zero_X5"", ""theta_U1X5"", ""theta_U2X5"","
"0","                                                                ""theta_zero_M"",""theta_X1M"", ""theta_X2M"", ""theta_X3M"",""theta_X4M"",""theta_X5M"","
"0","                                                                ""theta_zero_Y"", ""theta_MY"",""theta_U1Y"",""theta_U2Y"", ""theta_U3Y""))"
"0","    estimated_y_hmc_list[[data_count]] <-  mutilated_model(mu1 = mean(samples_hmc$mu1),"
"0","                                            mu2 = mean(samples_hmc$mu2),"
"0","                                            mu3 = mean(samples_hmc$mu3),"
"0","                                            u1_scale = mean(samples_hmc$u1_scale),"
"0","                                            u2_scale = mean(samples_hmc$u2_scale),"
"0","                                            u3_scale = mean(samples_hmc$u3_scale),"
"0","                                            theta_zero_M = mean(samples_hmc$theta_zero_M),"
"0","                                            theta_X1M = mean(samples_hmc$theta_X1M),"
"0","                                            theta_X2M = mean(samples_hmc$theta_X2M),"
"0","                                            theta_X3M = mean(samples_hmc$theta_X3M),"
"0","                                            theta_X4M = mean(samples_hmc$theta_X4M),"
"0","                                            theta_X5M = mean(samples_hmc$theta_X5M),"
"0","                                            theta_zero_Y = mean(samples_hmc$theta_zero_Y),"
"0","                                            theta_MY = mean(samples_hmc$theta_MY),"
"0","                                            theta_U1Y = mean(samples_hmc$theta_U1Y),"
"0","                                            theta_U2Y = mean(samples_hmc$theta_U2Y),"
"0","                                            theta_U3Y = mean(samples_hmc$theta_U3Y),"
"0","                                            x1 = x1[1:num_generated_samples],"
"0","                                            x2 = x2[1:num_generated_samples],"
"0","                                            x3 = x3[1:num_generated_samples],"
"0","                                            x4 = x4[1:num_generated_samples],"
"0","                                            x5 = x5[1:num_generated_samples],"
"0","                                            seed = seed,"
"0","                                            num_generated_samples = num_generated_samples"
"0","    )"
"0","    means_hmc <- c(means_hmc,abs(mean(estimated_y_hmc_list[[data_count]]) - mean(intv_data_list[[data_count]]$Y)))"
"0","    "
"0","  }"
"0","  means_hmc_list[[paste0(""num_data_points_"",num_data_points)]] <- means_hmc"
"0","  print(""means_hmc_list is:"")"
"0","  print(means_hmc_list)"
"0","  means_hmc <- c()"
"0","}"
"1","[1]"
"1"," ""num_data_points is:"""
"1","
"
"1","[1]"
"1"," 15"
"1","
"
"1","[1]"
"1"," ""data_count is:"""
"1","
"
"1","[1]"
"1"," 1"
"1","
"
"2","Error in h(simpleError(msg, call)) : 
  error in evaluating the argument 'object' in selecting a method for function 'sampling': object 'mod' not found
"
